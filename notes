- attach device
- restart adb in tcp mode:
  `adb tcpip 5556`
- get ip of device (in my case, 192.168.13.76)
- connect to device by typing `adb connect 192.168.13.76`
- disconnect device
---
To run your app on iOS:
   react-native run-ios
   - or -
   Open ios/rn_test.xcodeproj in Xcode
   Hit the Run button
To run your app on Android:
   Have an Android emulator running (quickest way to get started), or a device connected
   react-native run-android

Usage: react-native [options] [command]

Options:

  -V, --version                      output the version number
  -h, --help                         output usage information

Commands:

  start [options]                    starts the webserver
  run-ios [options]                  builds your app and starts it on iOS simulator
  run-android [options]              builds your app and starts it on a connected Android emulator or device
  new-library [options]              generates a native library bridge
  bundle [options]                   builds the javascript bundle for offline use
  unbundle [options]                 builds javascript as "unbundle" for offline use
  eject [options]                    Re-create the iOS and Android folders and native code
  link [options] [packageName]       links all native dependencies (updates native build files)
  unlink [options] <packageName>     unlink native dependency
  install [options] <packageName>    install and link native dependencies
  uninstall [options] <packageName>  uninstall and unlink native dependencies
  upgrade [options]                  upgrade your app's template files to the latest version; run this after updating the react-native version in your package.json and running npm install
  log-android [options]              starts adb logcat
  log-ios [options]                  starts iOS device syslog tail
  dependencies [options]             lists dependencies
  info [options]                     Get relevant version info about OS, toolchain and libraries
